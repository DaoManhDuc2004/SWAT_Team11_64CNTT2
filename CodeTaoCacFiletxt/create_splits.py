import os
import random
from collections import defaultdict

# ================================================================= #
# =========================== C·∫§U H√åNH ============================ #
# ================================================================= #

# 1. ƒê∆∞·ªùng d·∫´n ƒë·∫øn th∆∞ m·ª•c g·ªëc ch·ª©a c√°c th∆∞ m·ª•c 'train' v√† 'test'
#    V√≠ d·ª•: 'C:/Dataset/Mubaohiem'
ROOT_DATA_FOLDER = 'C:/animal'

# 2. ƒê∆∞·ªùng d·∫´n ƒë·∫øn th∆∞ m·ª•c b·∫°n mu·ªën l∆∞u c√°c file .txt
#    V√≠ d·ª•: 'D:/du_an_swat/data/Mubaohiem/'
OUTPUT_FOLDER = 'D:/thuyloiuniversity/Mon hoc tren lop/BigData/SWAT/data/animal'

# --- C·∫•u h√¨nh n√¢ng cao (th∆∞·ªùng kh√¥ng c·∫ßn ƒë·ªïi) ---
VAL_RATIO = 0.1  # 10% c·ªßa t·∫≠p train g·ªëc s·∫Ω ƒë∆∞·ª£c d√πng l√†m validation
FEWSHOT_SIZES = [4, 8, 16] # C√°c k√≠ch th∆∞·ªõc few-shot b·∫°n c·∫ßn
SEEDS = [1, 2, 3] # C√°c seed b·∫°n c·∫ßn

# ================================================================= #
# ========================= PH·∫¶N X·ª¨ L√ù ============================ #
# ================================================================= #

def process_folder(folder_path, class_to_id):
    """ƒê·ªçc m·ªôt th∆∞ m·ª•c (train ho·∫∑c test) v√† tr·∫£ v·ªÅ list c√°c (ƒë∆∞·ªùng d·∫´n, id_l·ªõp)."""
    data_list = []
    for class_name in class_to_id.keys():
        class_path = os.path.join(folder_path, class_name)
        if not os.path.isdir(class_path):
            continue
            
        image_files = [f for f in os.listdir(class_path) if os.path.isfile(os.path.join(class_path, f))]
        
        for img in image_files:
            full_path = os.path.join(class_path, img)
            data_list.append((full_path, class_to_id[class_name]))
            
    return data_list

def write_to_file(filepath, data_list):
    """Ghi danh s√°ch d·ªØ li·ªáu ra file txt."""
    with open(filepath, 'w') as f:
        for path, label in data_list:
            # Chu·∫©n h√≥a ƒë∆∞·ªùng d·∫´n ƒë·ªÉ t∆∞∆°ng th√≠ch
            path = path.replace('\\', '/')
            f.write(f"{path} {label} 1\n")
    print(f"‚úÖ ƒê√£ ghi {len(data_list)} d√≤ng v√†o file '{os.path.basename(filepath)}'")

def create_all_splits():
    """H√†m ch√≠nh ƒë·ªÉ t·∫°o t·∫•t c·∫£ c√°c file split."""
    print("B·∫Øt ƒë·∫ßu qu√° tr√¨nh t·∫°o file split...\n")
    
    # --- B∆∞·ªõc 1: Kh√°m ph√° d·ªØ li·ªáu ---
    train_folder = os.path.join(ROOT_DATA_FOLDER, 'train')
    test_folder = os.path.join(ROOT_DATA_FOLDER, 'test')

    if not os.path.isdir(train_folder) or not os.path.isdir(test_folder):
        print(f"L·ªói: Kh√¥ng t√¨m th·∫•y th∆∞ m·ª•c 'train' ho·∫∑c 'test' trong '{ROOT_DATA_FOLDER}'")
        return

    # T·∫°o th∆∞ m·ª•c output n·∫øu ch∆∞a c√≥
    os.makedirs(OUTPUT_FOLDER, exist_ok=True)

    # T·ª± ƒë·ªông t√¨m t√™n c√°c l·ªõp t·ª´ th∆∞ m·ª•c train
    class_names = [d for d in os.listdir(train_folder) if os.path.isdir(os.path.join(train_folder, d))]
    if not class_names:
        print(f"L·ªói: Kh√¥ng t√¨m th·∫•y th∆∞ m·ª•c l·ªõp n√†o trong '{train_folder}'.")
        return
        
    class_to_id = {name: i for i, name in enumerate(class_names)}
    print(f"T√¨m th·∫•y {len(class_names)} l·ªõp: {class_to_id}\n")

    # --- B∆∞·ªõc 2: X·ª≠ l√Ω v√† ghi file Test ---
    print("--- X·ª≠ l√Ω t·∫≠p TEST ---")
    test_data = process_folder(test_folder, class_to_id)
    random.shuffle(test_data)
    write_to_file(os.path.join(OUTPUT_FOLDER, 'test.txt'), test_data)
    print("-" * 20)

    # --- B∆∞·ªõc 3: X·ª≠ l√Ω t·∫≠p Train g·ªëc ƒë·ªÉ t·∫°o ra Train/Val v√† Fewshot ---
    original_train_data = process_folder(train_folder, class_to_id)

    # --- B∆∞·ªõc 3a: T·∫°o file Train v√† Val ---
    print("\n--- X·ª≠ l√Ω t·∫≠p TRAIN v√† VALIDATION ---")
    random.seed(42) # D√πng m·ªôt seed c·ªë ƒë·ªãnh ƒë·ªÉ vi·ªác chia train/val lu√¥n gi·ªëng nhau
    random.shuffle(original_train_data)
    
    split_index = int(len(original_train_data) * (1 - VAL_RATIO))
    final_train_data = original_train_data[:split_index]
    val_data = original_train_data[split_index:]
    
    write_to_file(os.path.join(OUTPUT_FOLDER, 'train.txt'), final_train_data)
    write_to_file(os.path.join(OUTPUT_FOLDER, 'val.txt'), val_data)
    print("-" * 20)

    # --- B∆∞·ªõc 3b: T·∫°o c√°c file Fewshot ---
    print("\n--- X·ª≠ l√Ω c√°c t·∫≠p FEWSHOT ---")
    
    # Gom c√°c ·∫£nh theo t·ª´ng l·ªõp ƒë·ªÉ d·ªÖ r√∫t m·∫´u
    data_by_class = defaultdict(list)
    for path, label in original_train_data:
        data_by_class[label].append((path, label))

    for seed in SEEDS:
        print(f"ƒêang t·∫°o fewshot cho SEED = {seed}...")
        for size in FEWSHOT_SIZES:
            # ƒê·∫∑t seed ƒë·ªÉ ƒë·∫£m b·∫£o k·∫øt qu·∫£ l·∫∑p l·∫°i cho m·ªói seed
            random.seed(seed)
            
            fewshot_data = []
            for class_id, images in data_by_class.items():
                # X√°o tr·ªôn danh s√°ch ·∫£nh c·ªßa l·ªõp hi·ªán t·∫°i
                random.shuffle(images)
                # L·∫•y `size` m·∫´u t·ª´ m·ªói l·ªõp
                fewshot_data.extend(images[:size])
            
            # X√°o tr·ªôn t·∫≠p fewshot cu·ªëi c√πng
            random.shuffle(fewshot_data)
            
            filename = f"fewshot{size}_seed{seed}.txt"
            write_to_file(os.path.join(OUTPUT_FOLDER, filename), fewshot_data)
    print("-" * 20)
    
    print("\nüéâ Ho√†n t·∫•t! T·∫•t c·∫£ c√°c file ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng.")


if __name__ == '__main__':
    create_all_splits()